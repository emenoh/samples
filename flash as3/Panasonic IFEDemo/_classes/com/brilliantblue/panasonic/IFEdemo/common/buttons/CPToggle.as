package com.brilliantblue.panasonic.IFEdemo.common.buttons{	import caurina.transitions.*;	import flash.display.*;	import flash.events.*;	import flash.geom.*;	import flash.utils.*;	public class CPToggle extends flash.display.MovieClip {		public var onMouseClickEvent;		public var Arrow;		public var Tab;		public var Whole;		public var doubleCheck;		public var TabOpen;		public var _Timer:Timer;		public var timeOut:Number = 10000;		public var cpTimer		private var clickEvent;		public function CPToggle() {			Arrow = this.arrow_mc;			Tab = this;			Whole = this.parent;			Arrow.alpha = .6;			TabOpen = true;			this.buttonMode = true;			this.mouseChildren = false;			this.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDownEvent,false,0,true);			this.addEventListener(MouseEvent.MOUSE_UP, onMouseUpEvent,false,0,true);			Whole.addEventListener(MouseEvent.CLICK, resetTime,false,0,true);			//autoHide();						cpTimer = setTimeout(autoHide, timeOut);										addEventListener(Event.REMOVED_FROM_STAGE, onRemoved,false,0,true);		}				private function resetTime(e:MouseEvent){			clearTimeout(cpTimer);			cpTimer = setTimeout(autoHide, timeOut);			}				private function onRemoved(e:Event){						this.removeEventListener (MouseEvent.MOUSE_DOWN, onMouseDownEvent);			this.removeEventListener (MouseEvent.MOUSE_UP, onMouseUpEvent);			Whole.removeEventListener(MouseEvent.CLICK, resetTime);			removeClickEvent();					}						public function setClickEvent(onMouseClickEvent) {			clickEvent = onMouseClickEvent;			this.addEventListener(MouseEvent.CLICK, onMouseClickEvent);		}				public function removeClickEvent()		{			this.removeEventListener (MouseEvent.CLICK, clickEvent);		}						private function onMouseDownEvent(evt:MouseEvent) {			Tweener.addTween(Arrow, {alpha:1, time:1, transition: "easeOutQuad"});		}		private function onMouseUpEvent(evt:MouseEvent) {			//Tweener.addTween(Arrow, {rotation:180, x:42, y:26, time:.1, transition: "easeOutBack"});			Arrow.gotoAndStop("closed");			doubleCheck = setInterval(Catinit, 250);			//trace("Tab Open = " + (TabOpen));			if (TabOpen == true) {				Tweener.addTween(Whole, {y:105, time:1, transition: "easeInOutBack"});				Tweener.addTween(Whole, {alpha:.4, time:2, transition: "linear"});				//Tweener.addTween(Arrow, {rotation:180, x:42, y:26, time:.1, transition: "easeOutBack"});				Arrow.gotoAndStop("closed");				TabOpen = false;								clearTimeout(cpTimer);				cpTimer = setTimeout(autoHide, timeOut);			} else {				Tweener.addTween(Whole, {y:0, time:1, transition: "easeInOutBack"});				Tweener.addTween(Whole, {alpha:1, time:2, transition: "linear"});				//Tweener.addTween(Arrow, {rotation:0, x:13.4, y:16.7, time:.1, transition: "easeOutBack"});				Arrow.gotoAndStop("open");				TabOpen = true;				clearTimeout(cpTimer);			}		}		public function autoHide() {			if (TabOpen == true) {				Tweener.addTween(Whole, {y:105, time:1, transition: "linear"});				Tweener.addTween(Whole, {alpha:.4, time:2, transition: "linear"});				//Tweener.addTween(Arrow, {rotation:180, x:42, y:26, time:.1, transition: "easeOutBack"});				Arrow.gotoAndStop("closed");				TabOpen = false;								clearTimeout(cpTimer);			}		}		public function Catinit() {			Tweener.addTween(Arrow, {alpha:.6, time:2, transition: "easeOutQuad"});			clearInterval(doubleCheck);		}	}}