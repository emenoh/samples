package com.brilliantblue.panasonic.IFEdemo.personalMedia.usbMedia.files{	import flash.display.*;	import flash.net.*;	import flash.events.*;	import flash.text.*	import flash.external.*	import flash.utils.*		import com.brilliantblue.panasonic.IFEdemo.view;	import com.brilliantblue.panasonic.IFEdemo.common.screen.*;	import com.brilliantblue.panasonic.IFEdemo.common.buttons.*;			public class view extends com.brilliantblue.panasonic.IFEdemo.view	{				private var _xmlLoader:URLLoader		private var _xmlData:XML = null;		public var personalMediaList:MovieClip;		public var personalMediaSlide:MovieClip;		public var personalMediaThumb:MovieClip;		public var myMovieClip:MovieClip;		public var tabInfoMC:MovieClip;		public var myTextField:TextField;		public var leftNav:Array;		public var _usbStatus;		public var _usbPath;		public var xmlTimer:Timer;				public function view () 		{			setLayout("2column");			setScreenTitle("USB MEDIA - PDF");			adjustScreen();			personalMediaList = new personalMediaList_mc();						myMovieClip = new MovieClip();			myMovieClip.graphics.beginFill(0x000000, 0);			myMovieClip.graphics.drawRect(0,0,600,400);			myMovieClip.graphics.endFill();									myTextField = new TextField();			myTextField.height = 600;			myTextField.width = 600;			myTextField.text = "Waiting for USB status...";			myTextField.x = 0;			myTextField.selectable = false; 			myTextField.setTextFormat(CC_ListFormat);									setContentMC(personalMediaList);			//setContentMC(myTextField);			var viewBtn = new BasicButton();				viewBtn.setTitle("VIEW FULL SCREEN");				viewBtn.x = 900;				viewBtn.y = 605;				viewBtn.name = "viewBtn";				viewBtn.setClickEvent(fullScreen);							addChild(viewBtn);							tabInfoMC = new TabInfoList;				tabInfoMC.x = 120;				tabInfoMC.y = 200;			addChild(tabInfoMC);									//getUSBStatus();						//xmlTimer = new Timer(2000);						//xmlTimer.addEventListener(TimerEvent.TIMER, loadUSBXML);			//xmlTimer.start();		}								/*private function getUSBStatus(){						_usbStatus = ExternalInterface.call("JSgetUSBMediaStatus");						myTextField.appendText("\nloadUSBStatus")						this.addEventListener(Event.ENTER_FRAME, loadUSBPath);					}				private function loadUSBPath(e:Event){						if(_usbStatus != null){							_usbPath = ExternalInterface.call("JSgetUSBMediaDirectory");						this.removeEventListener(Event.ENTER_FRAME, loadUSBPath);			this.addEventListener(Event.ENTER_FRAME, loadUSBXML);						}else{				myTextField.appendText("\ntrying for status....")			}					}*/				private  function loadUSBXML(e:TimerEvent){			if(_xmlData != null){			loadXML("/tmp/output.xml");			xmlTimer.removeEventListener(TimerEvent.TIMER, loadUSBXML);			}else{			myTextField.appendText("trying..");			}		}												private function loadXML(xmlpath)		{			_xmlLoader = new URLLoader();			_xmlData = new XML();			_xmlLoader.addEventListener(Event.COMPLETE, onLoadXML,false,0,true);			_xmlLoader.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);			_xmlLoader.load(new URLRequest(xmlpath));		}		private function onLoadXML(e:Event):void {			_xmlData = new XML(e.target.data);			//drawScreen();						myTextField.appendText(_xmlData.*);			//tree3D.loadXMLData(xmlData);			//trace(_xmlData);		//	spotlight.sourceXML = xmlData;					//	spotlight.addEventListener(spotlightEvent.SPOTLIGHT_CHANGE, onSpotlightChange, false, 0, true);		//	tree3D.loadXMLData(xmlData);						}						private function ioErrorHandler(event:IOErrorEvent):void {			myTextField.appendText("ioErrorHandler: " + event);					}						private function fullScreen(e:MouseEvent){						trace("go ful screen");		}					}		}