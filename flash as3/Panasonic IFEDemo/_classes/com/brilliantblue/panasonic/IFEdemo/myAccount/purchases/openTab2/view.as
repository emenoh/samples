package com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab2{	import flash.display.*;	import flash.events.*;	import flash.text.*;	import caurina.transitions.*;		import com.brilliantblue.panasonic.IFEdemo.view;	import com.brilliantblue.panasonic.IFEdemo.common.screen.*;	import com.brilliantblue.panasonic.IFEdemo.common.buttons.*;	import com.brilliantblue.panasonic.IFEdemo.common.key.*;		import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab1.view	import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab2a1.view	import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab2b.view		public class view extends com.brilliantblue.panasonic.IFEdemo.view	{				public var myMovieClip:MovieClip;		public var heading:TextField;		public var subHead:TextField;		private var presets:Array;		private var creditAccount:XML;		private var _detailsMethod:String;		private var nextBtn:MovieClip;		private var cancelBtn:MovieClip;				public function view () 		{									setLayout("2column");			setScreenTitle("OPEN TAB");			adjustScreen();												heading = createTextField(screen.title.x, screen.title.y+100, 200, undefined);			heading.text = "Step 2/4";			heading.setTextFormat(LC_SubHeadFormat);			screen.addChild(heading);									subHead = createTextField(screen.title.x, heading.y+60, 200, undefined);			subHead.width = 200;			subHead.multiline = true;			subHead.wordWrap = true;			//heading.autoSize = TextFieldAutoSize.BOTTOM;			subHead.text = "Personal Details";			subHead.setTextFormat(LC_BodyFormat);			screen.addChild(subHead);													cancelBtn = new BasicButton();				cancelBtn.setTitle("Cancel/Back");				cancelBtn.x = 115;				cancelBtn.name = "backBtn";				cancelBtn.setClickEvent(goBack);							addChild(cancelBtn);											nextBtn = new BasicButton();				nextBtn.setTitle("Next");				nextBtn.XPos = "RIGHT";				nextBtn.name = "nextBtn";				nextBtn.setClickEvent(openTabStep2b);							addChild(nextBtn);									drawScreen();					this.addEventListener(Event.ADDED_TO_STAGE, onAdded,false,0,true);									currentItemOption = nextBtn;						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));												}								private function onAdded(e:Event){			//trace("added");            stage.addEventListener(KeyboardEvent.KEY_UP, navUp,false,0,true);            stage.addEventListener(KeyboardEvent.KEY_DOWN, navDown,false,0,true);								}												private function navUp(e:KeyboardEvent){			//trace(e.keyCode);			k = KH.convertKeyCodeToKey(e.keyCode, e.shiftKey)						switch(k)				{					case KeyType.LEFT://left arrow											trace(currentItemOption.name);						//currentItem.dispatchEvent(new InteractiveScene3DEvent(InteractiveScene3DEvent.OBJECT_OUT, currentItem));						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						prevItemOption = getPrevOption(currentItemOption);						prevItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItemOption = prevItemOption;						trace(currentItemOption.name);						break;					case KeyType.RIGHT://right arrow						trace(currentItemOption.name);						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						nextItemOption = getNextOption(currentItemOption);						nextItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItemOption = nextItemOption;						trace(currentItemOption.name);						break;																case KeyType.UP://up arrow						currentItem.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						prevItem = getPrevItem(currentItem);						prevItem.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItem = prevItem;						currentItem.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;											case KeyType.DOWN://down arrow						currentItem.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						nextItem = getNextItem(currentItem);						nextItem.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItem = nextItem;						currentItem.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;											case KeyType.OK://select current item						//if(currentItem != previousItem){						//keyboard = true;						//trace(currentItem.name);						var optionButton = currentItemOption;						optionButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						//}						break;																	case KeyType.HOME://back button						closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;																case KeyType.BACK://back button						closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;																					}						}						private function navDown(e:KeyboardEvent){						k = KH.convertKeyCodeToKey(e.keyCode, e.shiftKey)									switch(k)				{											/*case KeyType.UP://up arrow						upArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_DOWN, true, false));						break;											case KeyType.DOWN://down arrow						downArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_DOWN, true, false));						break;						*/										}						}						override protected function screenShutDown(){						stage.removeEventListener(KeyboardEvent.KEY_UP, navUp);			stage.removeEventListener(KeyboardEvent.KEY_DOWN, navDown);		}										public function drawScreen(){						var currentItemSet = false;						presets = new Array("Swipe Your Frequent Flyer Card", "Enter Your Details Manually");									//trace(_cities);						var subMenuMC = new MovieClip();				subMenuMC.name = "subMenuMC";				subMenuMC.y = 5;									totalItems = presets.length;						for(var i=0; i < totalItems;i++)			{							var amount = presets[i];						var subNavButton:MovieClip = new MenuButton();			//selectButton2.name = 'selectButton1';						subNavButton.setTitle(presets[i]);						subNavButton.setClickEvent(pickMethod);			subNavButton.x = 0;			subNavButton.y = 0+60*i;			subNavButton.buttonWidth = 650;			subNavButton.name = "subNavButton_"+i;			subNavButton.extra.method = presets[i];			subNavButton.extra.index = i;						//trace(navButton.name)									if(currentItemSet != true){				currentItem = subNavButton;				//trace(currentItem.name);				currentItemSet = true;				}															subMenuMC.addChild(subNavButton);																}						setContentMC(subMenuMC);									/*			try{				var p = contentRegion.scrollArea;				while(p.numChildren) p.removeChildAt(0);			}catch(e:Error){							}			contentRegion.scrollArea.addChild(subMenuMC);*/									try{			var scrollBar = contentRegion.getChildByName("sb");			scrollBar.getChildByName("scroller").y = 0;						}catch(e:Error){			}			 										currentItem.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));					}						private function getNextItem(_currentItem){			var index = Number(_currentItem.extra.index);			var parentMC = _currentItem.parent;			var result;						if(index < Number(totalItems-1)){			result = parentMC.getChildByName("subNavButton_"+Number(index+1));			}else{			result = parentMC.getChildByName("subNavButton_0");			}			return result;						}					private function getPrevItem(_currentItem){			var index = Number(_currentItem.extra.index);			var parentMC = _currentItem.parent;			trace(totalItems);			var result;			if(index > 0){			result = parentMC.getChildByName("subNavButton_"+Number(index-1));			}else{			result = parentMC.getChildByName("subNavButton_"+Number(totalItems-1));			}						return result;						}									private function getPrevOption(_currentItemOption){			var result;						if(_currentItemOption == nextBtn){				result = cancelBtn;			}else{				result = nextBtn;			}						return result;		}				private function getNextOption(_currentItemOption){			var result;						if(_currentItemOption == nextBtn){				result = cancelBtn;			}else{				result = nextBtn;			}						return result;		}																				private function pickMethod(e:MouseEvent):void {						var p = e.target.parent;			//trace(p.name);						for(var i=0; i < presets.length;i++)			{				var subNavButton = p.getChildByName("subNavButton_"+i);					subNavButton.unSelectButton();			}						e.target.selectButton();						if(e.target.extra.method == "Swipe Your Frequent Flyer Card"){				_detailsMethod = "FFCard";			}else{				_detailsMethod = "Manual";			}								//check book for how to update							}										private function openTabStep2b(e:MouseEvent){			parentMC = this.parent;			var myView;			if(_detailsMethod == "FFCard"){			myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab2a1.view();			}else if(_detailsMethod == "Manual"){			myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab2b.view();			}else{				return;			}			//trace(this.parent.name);			myView.x = 1280;//at lest... maybe further right			parentMC.addChild(myView);			//do our tween and then add onComplete function to:			//do a softCloseClick for the current screen			Tweener.addTween(this,{x: -1280, time: 1, delay: 0.25});			Tweener.addTween(myView,{							 x: 0, 							 time: 1, 							 delay: 0.25, 							 onComplete: function(){										swapOutClose();										}, 							 onCompleteScope: this							 });		}				private function goBack(e:MouseEvent){			parentMC = this.parent;			var myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab1.view();						//trace(this.parent.name);			myView.x = -1280;//at lest... maybe further right			parentMC.addChild(myView);			//do our tween and then add onComplete function to:			//do a softCloseClick for the current screen			Tweener.addTween(this,{x: 1280, time: 1, delay: 0.25});			Tweener.addTween(myView,{							 x: 0, 							 time: 1, 							 delay: 0.25, 							 onComplete: function(){										swapOutClose();										}, 							 onCompleteScope: this							 });			//do a new tween on the new item after we've added it					}											}		}