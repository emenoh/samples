package com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab1{	import flash.display.*;	import flash.events.*;	import flash.text.*;	import flash.geom.*;	import caurina.transitions.*;		import com.brilliantblue.panasonic.IFEdemo.view;	import com.brilliantblue.panasonic.IFEdemo.common.screen.*;	import com.brilliantblue.panasonic.IFEdemo.common.buttons.*;	import com.brilliantblue.panasonic.IFEdemo.common.key.*;			import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.createAccount.view;	import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab2.view		public class view extends com.brilliantblue.panasonic.IFEdemo.view	{				public var myMovieClip:MovieClip;		public var heading:TextField;		public var subHead:TextField;		private var presets:Array;		private var creditAccount:XML;		private var amount:String = '';		private var nextBtn:MovieClip;		private var backBtn:MovieClip;				public function view () 		{			setLayout("2column");			setScreenTitle("OPEN TAB");			adjustScreen();						//myMovieClip = new openTabStep1MC();						heading = createTextField(screen.title.x, screen.title.y+100, 200, undefined);			heading.text = "Step 1/4";			heading.setTextFormat(LC_SubHeadFormat);			screen.addChild(heading);												subHead = createTextField(screen.title.x, heading.y+60, 200, undefined);			subHead.width = 200;			subHead.multiline = true;			subHead.wordWrap = true;			//heading.autoSize = TextFieldAutoSize.BOTTOM;			subHead.text = "Set Amount to be preauthorized";			subHead.setTextFormat(LC_BodyFormat);			screen.addChild(subHead);															/*myMovieClip.x = 130;			myMovieClip.y = 166;*/						//this.addChild(myMovieClip);									//setContentMC(myMovieClip);										nextBtn = new BasicButton();				nextBtn.setTitle("Next");				nextBtn.XPos = "RIGHT";				nextBtn.name = "nextBtn";				nextBtn.setClickEvent(openTabStep2);							addChild(nextBtn);										backBtn = new BasicButton();				backBtn.setTitle("back");				backBtn.x = 115;				backBtn.name = "backBtn";				backBtn.setClickEvent(goBack);							addChild(backBtn);								this.addEventListener(Event.ADDED_TO_STAGE, onAdded,false,0,true);									currentItemOption = nextBtn;						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));															}								private function onAdded(e:Event){			//trace("added");            stage.addEventListener(KeyboardEvent.KEY_UP, navUp,false,0,true);            stage.addEventListener(KeyboardEvent.KEY_DOWN, navDown,false,0,true);						creditAccount = MovieClip(root)._creditAccount;			creditAccount.tabLimit = "0";						drawScreen();					}								private function navUp(e:KeyboardEvent){			//trace(e.keyCode);			k = KH.convertKeyCodeToKey(e.keyCode, e.shiftKey)						switch(k)				{					case KeyType.LEFT://left arrow											trace(currentItemOption.name);						//currentItem.dispatchEvent(new InteractiveScene3DEvent(InteractiveScene3DEvent.OBJECT_OUT, currentItem));						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						prevItemOption = getPrevOption(currentItemOption);						prevItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItemOption = prevItemOption;						trace(currentItemOption.name);						break;					case KeyType.RIGHT://right arrow						trace(currentItemOption.name);						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						nextItemOption = getNextOption(currentItemOption);						nextItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItemOption = nextItemOption;						trace(currentItemOption.name);						break;																case KeyType.UP://up arrow						currentItem.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						prevItem = getPrevItem(currentItem);						prevItem.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItem = prevItem;						currentItem.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;											case KeyType.DOWN://down arrow						currentItem.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						nextItem = getNextItem(currentItem);						nextItem.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItem = nextItem;						currentItem.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;											case KeyType.OK://select current item						//if(currentItem != previousItem){						//keyboard = true;						//trace(currentItem.name);						var optionButton = currentItemOption;						optionButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						//}						break;																	case KeyType.HOME://back button						closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;																case KeyType.BACK://back button						closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;																					}						}						private function navDown(e:KeyboardEvent){						k = KH.convertKeyCodeToKey(e.keyCode, e.shiftKey)						switch(k)				{											/*case KeyType.UP://up arrow						upArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_DOWN, true, false));						break;											case KeyType.DOWN://down arrow						downArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_DOWN, true, false));						break;						*/										}						}						override protected function screenShutDown(){						stage.removeEventListener(KeyboardEvent.KEY_UP, navUp);			stage.removeEventListener(KeyboardEvent.KEY_DOWN, navDown);		}						public function drawScreen(){												var currentItemSet = false;						presets = new Array("20", "50", "100", "Other Amount");									//trace(_cities);						var subMenuMC = new MovieClip();				subMenuMC.name = "subMenuMC";				subMenuMC.y = 5;						totalItems = presets.length;						for(var i=0; i < totalItems;i++)			{							var amountText = presets[i];						var subNavButton:MovieClip = new MenuButton();			//selectButton2.name = 'selectButton1';			if(amountText != "Other Amount"){			subNavButton.setTitle("$"+amountText+"\t\t\t\t\t\t\tPre Authorized");			}else{			subNavButton.setTitle(amountText);			}			subNavButton.setClickEvent(updateTab);			subNavButton.x = 0;			subNavButton.y = 0+60*i;			subNavButton.buttonWidth = 650;			subNavButton.name = "subNavButton_"+i;			subNavButton.extra.amount = amountText;			subNavButton.extra.index = i;									if(currentItemSet != true){				currentItem = subNavButton;				//trace(currentItem.name);				currentItemSet = true;				}										//trace(navButton.name)						subMenuMC.addChild(subNavButton);																}						setContentMC(subMenuMC);									/*			try{				var p = contentRegion.scrollArea;				while(p.numChildren) p.removeChildAt(0);			}catch(e:Error){							}			contentRegion.scrollArea.addChild(subMenuMC);*/									try{			var scrollBar = contentRegion.getChildByName("sb");			scrollBar.getChildByName("scroller").y = 0;						}catch(e:Error){			}			 							currentItem.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));								}								private function getNextItem(_currentItem){			var index = Number(_currentItem.extra.index);			var parentMC = _currentItem.parent;			var result;						if(index < Number(totalItems-1)){			result = parentMC.getChildByName("subNavButton_"+Number(index+1));			}else{			result = parentMC.getChildByName("subNavButton_0");			}			return result;						}					private function getPrevItem(_currentItem){			var index = Number(_currentItem.extra.index);			var parentMC = _currentItem.parent;			trace(totalItems);			var result;			if(index > 0){			result = parentMC.getChildByName("subNavButton_"+Number(index-1));			}else{			result = parentMC.getChildByName("subNavButton_"+Number(totalItems-1));			}						return result;						}									private function getPrevOption(_currentItemOption){			var result;						if(_currentItemOption == nextBtn){				result = backBtn;			}else{				result = nextBtn;			}						return result;		}				private function getNextOption(_currentItemOption){			var result;						if(_currentItemOption == nextBtn){				result = backBtn;			}else{				result = nextBtn;			}						return result;		}								private function updateTab(e:MouseEvent):void {						var p = e.target.parent;			//trace(p.name);						for(var i=0; i < totalItems;i++)			{				var subNavButton = p.getChildByName("subNavButton_"+i);					subNavButton.unSelectButton();					try{						//trace(subNavButton.getChildByName("otherAmount"));						subNavButton.removeChild(subNavButton.getChildByName("otherAmount"));						subNavButton.removeChild(subNavButton.getChildByName("dollarSign"));					}catch(e:Error){											}			}						e.target.selectButton();						amount = e.target.extra.amount;			if(amount != "Other Amount"){					trace(creditAccount.tabLimit);					creditAccount.tabLimit = amount;					trace(creditAccount.tabLimit);			}else{					e.target.buttonMode = false;					var dollarSign = new TextField();					dollarSign.text = "$";					dollarSign.width = 30;					dollarSign.y = 0;					dollarSign.x = 405;					dollarSign.multiline = false;					dollarSign.embedFonts = true;					dollarSign.setTextFormat(CC_InputFormat);					dollarSign.name = "dollarSign";					e.target.addChild(dollarSign);					var otherAmount = new TextField();					//otherAmount.multiline = false;					otherAmount.embedFonts = true;					otherAmount.width = 100;					otherAmount.height = 30;					otherAmount.restrict = "0-9";					otherAmount.maxChars = 7;					otherAmount.selectable = true;					otherAmount.y = 0;					otherAmount.x = 425;					otherAmount.text = "0";					otherAmount.type = TextFieldType.INPUT;					otherAmount.setTextFormat(CC_InputFormat);					otherAmount.name = "otherAmount";					e.target.addChild(otherAmount);					otherAmount.stage.focus = otherAmount;					otherAmount.setSelection(otherAmount.length,otherAmount.length);					otherAmount.text = ""; //empty it again :)					otherAmount.text = "0";					otherAmount.addEventListener(FocusEvent.FOCUS_OUT,addOtherAmount);										function addOtherAmount(e:FocusEvent){						var otherAmountValue = e.target.text;						creditAccount.tabLimit = otherAmountValue;					}			}					//check book for how to update							}								private function openTabStep2(e:MouseEvent){			if(amount != ''){			parentMC = this.parent;			var myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab2.view();						//trace(this.parent.name);			myView.x = 1280;//at lest... maybe further right			parentMC.addChild(myView);			//do our tween and then add onComplete function to:			//do a softCloseClick for the current screen			Tweener.addTween(this,{x: -1280, time: 1, delay: 0.25});			Tweener.addTween(myView,{							 x: 0, 							 time: 1, 							 delay: 0.25, 							 onComplete: function(){										swapOutClose();										}, 							 onCompleteScope: this							 });			}else{				return;			}		}						private function goBack(e:MouseEvent){			parentMC = this.parent;			var myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.createAccount.view();						//trace(this.parent.name);			myView.x = -1280;//at lest... maybe further right			parentMC.addChild(myView);			//do our tween and then add onComplete function to:			//do a softCloseClick for the current screen			Tweener.addTween(this,{x: 1280, time: 1, delay: 0.25});			Tweener.addTween(myView,{							 x: 0, 							 time: 1, 							 delay: 0.25, 							 onComplete: function(){										swapOutClose();										}, 							 onCompleteScope: this							 });			//do a new tween on the new item after we've added it					}					}		}