package com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.welcome{	import flash.display.*;	import flash.events.*;	import flash.text.*	import caurina.transitions.*;		import com.brilliantblue.panasonic.IFEdemo.view;	import com.brilliantblue.panasonic.IFEdemo.common.screen.*;	import com.brilliantblue.panasonic.IFEdemo.common.buttons.*;	import com.brilliantblue.panasonic.IFEdemo.common.key.*;	import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.createAccount.view;/*	import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab111.view;	import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab112.view;	import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab113.view;	import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.viewRates.view;	import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.viewTab.view;	import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.closeTab.view;	import com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.activeTab.view;	*/			public class view extends com.brilliantblue.panasonic.IFEdemo.view	{				public var myMovieClip:MovieClip;		public var myTextField:TextField;		public var myTextFormat:TextFormat;		private var continueBtn:MovieClip;				public function view () 		{			setLayout("1column");			setScreenTitle("WELCOME");			adjustScreen();									myMovieClip = new myAccountWelcomeMC();												setContentMC(myMovieClip);											continueBtn = new BasicButton();				continueBtn.setTitle("CONTINUE");				continueBtn.XPos = "RIGHT";				continueBtn.name = "continueBtn";				continueBtn.setClickEvent(createAccount);							addChild(continueBtn);									this.addEventListener(Event.ADDED_TO_STAGE, onAdded,false,0,true);							continueBtn.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));					}								private function onAdded(e:Event){			//trace("added");            stage.addEventListener(KeyboardEvent.KEY_UP, navUp,false,0,true);            stage.addEventListener(KeyboardEvent.KEY_DOWN, navDown,false,0,true);								}								private function navUp(e:KeyboardEvent){			//trace(e.keyCode);						k = KH.convertKeyCodeToKey(e.keyCode, e.shiftKey)						switch(k)				{					/*case KeyType.LEFT://left arrow											trace(currentItemOption.name);						//currentItem.dispatchEvent(new InteractiveScene3DEvent(InteractiveScene3DEvent.OBJECT_OUT, currentItem));						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						prevItemOption = getPrevOption(currentItem);						prevItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItemOption = prevItemOption;						trace(currentItemOption.name);						break;					case KeyType.RIGHT://right arrow						trace(currentItemOption.name);						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						nextItemOption = getNextOption(currentItem);						nextItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItemOption = nextItemOption;						trace(currentItemOption.name);						break;											case KeyType.UP://up arrow						upArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_UP, true, false));						break;											case KeyType.DOWN://down arrow						downArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_UP, true, false));						break;*/											case KeyType.OK://select current item						//if(currentItem != previousItem){						//keyboard = true;						//trace(currentItem.name);						//var optionButton = currentItemOption;						continueBtn.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						//}						break;																case KeyType.HOME://back button						closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;																case KeyType.BACK://back button						closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;																					}						}						private function navDown(e:KeyboardEvent){						k = KH.convertKeyCodeToKey(e.keyCode, e.shiftKey)						switch(k)				{											/*case KeyType.UP://up arrow						upArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_DOWN, true, false));						break;											case KeyType.DOWN://down arrow						downArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_DOWN, true, false));						break;						*/										}						}						override protected function screenShutDown(){						stage.removeEventListener(KeyboardEvent.KEY_UP, navUp);			stage.removeEventListener(KeyboardEvent.KEY_DOWN, navDown);		}				//should put all of these functions in a parent view file so they are all available easily.... or just put them in individual views... 				private function createAccount(e:MouseEvent){			parentMC = this.parent;			var myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.createAccount.view();						//trace(this.parent.name);			myView.x = 1280;//at lest... maybe further right			parentMC.addChild(myView);			//do our tween and then add onComplete function to:			//do a softCloseClick for the current screen			Tweener.addTween(this,{x: -1280, time: 1, delay: 0.25});			Tweener.addTween(myView,{							 x: 0, 							 time: 1, 							 delay: 0.25, 							 onComplete: function(){										swapOutClose();										}, 							 onCompleteScope: this							 });			//do a new tween on the new item after we've added it					}/////////////////// all this will come later //////////		/*		private function activeTab(e:MouseEvent){								var myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.activeTab.view();			parentMC.addChild(myView);					}				private function closeTab(e:MouseEvent){								var myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.closeTab.view();			parentMC.addChild(myView);					}				private function viewTab(e:MouseEvent){								var myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.viewTab.view();			parentMC.addChild(myView);					}				private function viewRates(e:MouseEvent){								var myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.viewRates.view();			parentMC.addChild(myView);					}				private function openTab112(e:MouseEvent){								var myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab111.view();			parentMC.addChild(myView);					}		private function openTab111(e:MouseEvent){								var myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab112.view();			parentMC.addChild(myView);					}		private function openTab113(e:MouseEvent){								var myView = new com.brilliantblue.panasonic.IFEdemo.myAccount.purchases.openTab113.view();			parentMC.addChild(myView);					}*/							}		}