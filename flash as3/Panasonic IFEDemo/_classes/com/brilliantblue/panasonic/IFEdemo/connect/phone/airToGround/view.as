package com.brilliantblue.panasonic.IFEdemo.connect.phone.airToGround{	import flash.display.*;	import flash.events.*;	import flash.text.*		import com.brilliantblue.panasonic.IFEdemo.view;	import com.brilliantblue.panasonic.IFEdemo.common.screen.*;	import com.brilliantblue.panasonic.IFEdemo.common.buttons.*;	import com.brilliantblue.panasonic.IFEdemo.common.key.*;			public class view extends com.brilliantblue.panasonic.IFEdemo.view	{				public var myMovieClip:MovieClip;		public var myTextField:TextField;		public var myTextFormat:TextFormat;				public function view () 		{			setLayout("1column");			setScreenTitle("air to ground phone");			adjustScreen();						myMovieClip = new AirToGroundMC();			myMovieClip.x = 120;			myMovieClip.y = 166;			contentRegion.sb.visible = false;						addChild(myMovieClip);									//setContentMC(myMovieClip);						/*myMovieClip.btn_1.addEventListener(MouseEvent.CLICK, btn1);			myMovieClip.btn_2.addEventListener(MouseEvent.CLICK, btn2);			myMovieClip.btn_3.addEventListener(MouseEvent.CLICK, btn3);			myMovieClip.btn_4.addEventListener(MouseEvent.CLICK, btn4);			myMovieClip.btn_5.addEventListener(MouseEvent.CLICK, btn5);			myMovieClip.btn_6.addEventListener(MouseEvent.CLICK, btn6);			myMovieClip.btn_7.addEventListener(MouseEvent.CLICK, btn7);			myMovieClip.btn_8.addEventListener(MouseEvent.CLICK, btn8);			myMovieClip.btn_9.addEventListener(MouseEvent.CLICK, btn9);			myMovieClip.btn_0.addEventListener(MouseEvent.CLICK, btn0);			//myMovieClip.btn_*.addEventListener(MouseEvent.CLICK, btn*);			//myMovieClip.btn_#.addEventListener(MouseEvent.CLICK, btn#);*/			this.addEventListener(Event.ADDED_TO_STAGE, onAdded,false,0,true);								}								private function onAdded(e:Event){			//trace("added");            stage.addEventListener(KeyboardEvent.KEY_UP, navUp,false,0,true);            stage.addEventListener(KeyboardEvent.KEY_DOWN, navDown,false,0,true);						removeEventListener(Event.ADDED_TO_STAGE, onAdded);								}								private function navUp(e:KeyboardEvent){			//trace(e.keyCode);			k = KH.convertKeyCodeToKey(e.keyCode, e.shiftKey)						switch(k)				{					/*case KeyType.LEFT://left arrow											trace(currentItemOption.name);						//currentItem.dispatchEvent(new InteractiveScene3DEvent(InteractiveScene3DEvent.OBJECT_OUT, currentItem));						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						prevItemOption = getPrevOption(currentItem);						prevItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItemOption = prevItemOption;						trace(currentItemOption.name);						break;					case KeyType.RIGHT://right arrow						trace(currentItemOption.name);						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						nextItemOption = getNextOption(currentItem);						nextItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItemOption = nextItemOption;						trace(currentItemOption.name);						break;											case KeyType.UP://up arrow						upArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_UP, true, false));						break;											case KeyType.DOWN://down arrow						downArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_UP, true, false));						break;*/											/*case KeyType.OK://select current item						//if(currentItem != previousItem){						//keyboard = true;						//trace(currentItem.name);						var optionButton = currentItemOption;						optionButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						//}						break;*/										case KeyType.HOME://back button						closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;																	case KeyType.BACK://back button						closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;																					}						}						private function navDown(e:KeyboardEvent){						k = KH.convertKeyCodeToKey(e.keyCode, e.shiftKey)						switch(k)				{											/*case KeyType.UP://up arrow						upArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_DOWN, true, false));						break;											case KeyType.DOWN://down arrow						downArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_DOWN, true, false));						break;						*/										}						}						override protected function screenShutDown(){						stage.removeEventListener(KeyboardEvent.KEY_UP, navUp);			stage.removeEventListener(KeyboardEvent.KEY_DOWN, navDown);		}							/*public function btn1(e:MouseEvent){				myMovieClip.output.appendText ("1");				trace("one");	}	public function btn2(e:MouseEvent){				myMovieClip.output.appendText ("2");				trace("two");	}	public function btn3(e:MouseEvent){				myMovieClip.output.appendText ("3");				trace("three");	}		public function btn4(e:MouseEvent){				myMovieClip.output.appendText ("4");				trace("four");	}		public function btn5(e:MouseEvent){				myMovieClip.output.appendText ("5");				trace("five");	}		public function btn6(e:MouseEvent){				myMovieClip.output.appendText ("6");				trace("six");	}		public function btn7(e:MouseEvent){				myMovieClip.output.appendText ("7");				trace("seven");	}		public function btn8(e:MouseEvent){				myMovieClip.output.appendText ("8");				trace("eight");	}		public function btn9(e:MouseEvent){				myMovieClip.output.appendText ("9");				trace("nine");	}		public function btn0(e:MouseEvent){				myMovieClip.output.appendText ("0");				trace("zero");	}	//	public function btn*(e:MouseEvent){//				myMovieClip.output.appendText ("*");//				trace("nine");//	}	//	public function btn#(e:MouseEvent){//				myMovieClip.output.appendText ("#");//				trace("zero");//	}				*/							}		}