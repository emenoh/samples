package com.brilliantblue.panasonic.IFEdemo.newsInfo.weather.forecast{	import flash.display.*;	import flash.events.*;	import flash.text.*	import flash.utils.*;	import flash.net.*;	import caurina.transitions.*;		import com.brilliantblue.panasonic.IFEdemo.view;	import com.brilliantblue.panasonic.IFEdemo.common.screen.*;	import com.brilliantblue.panasonic.IFEdemo.common.buttons.*;	import com.brilliantblue.panasonic.IFEdemo.common.key.*;			import com.brilliantblue.panasonic.IFEdemo.newsInfo.weather.*;		public class view extends com.brilliantblue.panasonic.IFEdemo.view	{						private var backButton;							public function view () 		{			//trace(_stage.stageWidth);						setLayout("3column");			adjustScreen();			//setScreenTitle("weather");						var weatherSidebar = new weatherSideBarMC;			weatherSidebar.x = 975;			weatherSidebar.y = 155;						addChild(weatherSidebar);									var TodaysForecast = new TodaysForecastMC;			TodaysForecast.x = 120;			TodaysForecast.y = 155;			addChild(TodaysForecast);									var Forecast = new ForecastMC;			Forecast.x = 0;			Forecast.y = 0;			//addChild(Forecast);						var newsTicker = new newsTickerMC;			newsTicker.x = 405;			newsTicker.y = 610;						addChild(newsTicker);						backButton = new BasicButton;			backButton.x = 120;			backButton.y = 606;			backButton.setTitle("BACK");			backButton.setClickEvent(goBack);			addChild(backButton);						contentRegion.sb.visible = false;			//contentRegion.scrollArea.addChild(Forecast);			setContentMC(Forecast);				this.addEventListener(Event.ADDED_TO_STAGE, onAdded,false,0,true);						currentItemOption = backButton;						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));		}						private function onAdded(e:Event){			trace("Forecast added - 3");            stage.addEventListener(KeyboardEvent.KEY_UP, navUp,false,0,true);            stage.addEventListener(KeyboardEvent.KEY_DOWN, navDown,false,0,true);								}						private function navUp(e:KeyboardEvent){			//trace(e.keyCode);			k = KH.convertKeyCodeToKey(e.keyCode, e.shiftKey)						switch(k)				{					/*case KeyType.LEFT://left arrow											trace(currentItemOption.name);						//currentItem.dispatchEvent(new InteractiveScene3DEvent(InteractiveScene3DEvent.OBJECT_OUT, currentItem));						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						prevItemOption = getPrevOption(currentItemOption);						prevItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItemOption = prevItemOption;						trace(currentItemOption.name);						break;					case KeyType.RIGHT://right arrow						trace(currentItemOption.name);						currentItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT, true, false));						nextItemOption = getNextOption(currentItemOption);						nextItemOption.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER, true, false));						currentItemOption = nextItemOption;						trace(currentItemOption.name);						break;*/																				/*case KeyType.UP://up arrow						dispatchEvent(new KeyboardEvent(KeyboardEvent.KEY_UP, true, false,0 ,9 ));						break;											case KeyType.DOWN://down arrow						dispatchEvent(new KeyboardEvent(KeyboardEvent.KEY_UP, true, false, Shift+9 ,0 ));						break;*/											case KeyType.OK://select current item						//if(currentItem != previousItem){						//keyboard = true;						//trace(currentItem.name);						var optionButton = currentItemOption;						optionButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						//}						break;																	case KeyType.HOME://back button						closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;																case KeyType.BACK://back button						closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));						break;																					}						}						private function navDown(e:KeyboardEvent){						k = KH.convertKeyCodeToKey(e.keyCode, e.shiftKey)									switch(k)				{											/*case KeyType.UP://up arrow						upArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_DOWN, true, false));						break;											case KeyType.DOWN://down arrow						downArrow.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_DOWN, true, false));						break;						*/										}						}						override protected function screenShutDown(){						stage.removeEventListener(KeyboardEvent.KEY_UP, navUp);			stage.removeEventListener(KeyboardEvent.KEY_DOWN, navDown);		}				private function goBack(e:MouseEvent){			//trace("Go back - 4");			parentMC = this.parent;			var myView = new com.brilliantblue.panasonic.IFEdemo.newsInfo.weather.view();						//trace(this.parent.name);			myView.x = -1280;//at lest... maybe further right									Tweener.addTween(this,{							 x: 1280, 							 time: 1, 							 delay: 0.25, 							 onComplete: function(){										swapOutClose();										parentMC.addChild(myView);			Tweener.addTween(myView,{x: 0, time: 1, delay: 0.25 });										}, 							 onCompleteScope: this});											}							}//end		}